// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             String     @id @default(cuid())
  username       String
  email          String     @unique
  emailVerified  Boolean    @default(false)
  image          String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt

  // Relations
  sessions       Session[]
  accounts       Account[]
}

model Session {
  id          String   @id @default(cuid())
  userId      String
  token       String   @unique
  expiresAt   DateTime
  ipAddress   String?
  userAgent   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relation
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])

}


model Account {
  id                        String    @id @default(cuid())
  userId                    String
  accountId                 String
  providerId                String
  accessToken               String?
  refreshToken              String?
  accessTokenExpiresAt      DateTime?
  refreshTokenExpiresAt     DateTime?
  scope                     String?
  idToken                   String?
  password                  String?
  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime  @updatedAt

  // Relation
  user                      User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([accountId, providerId]) // Each provider+account combo must be unique
  @@index([userId])
}

model Verification {
  id         String   @id @default(cuid())
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

}
